name: 'Test coverage in Pull request'
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: 'Test coverage in Pull request'
    runs-on: 'ubuntu-latest'
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.target_commitish }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up node
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20
          cache: 'yarn'
          scope: '@mtnkente'
          registry-url: https://npm.pkg.github.com/
          always-auth: true

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Check format
        run: yarn format:check

      - name: Check Linting
        run: yarn lint:check

      - name: Run integration tests
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
        if: env.NODE_AUTH_TOKEN != null
        run: yarn test

  coverage:
    name: 'Test coverage'
    permissions:
      checks: write
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.5
        with:
          ref: ${{ github.event.release.target_commitish }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          scope: '@mtnkente'
          registry-url: https://npm.pkg.github.com
          always-auth: true

      - name: Install CLI dependencies
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Add test coverage report in PR
        uses: ArtiomTr/jest-coverage-report-action@v2.3.0
        with:
          github-token: ${{ secrets.PACKAGES_TOKEN }}
          package-manager: yarn
          skip-step: install
          annotations: none
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
